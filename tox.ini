[tox]
minversion = 3.1
envlist = py39,pep8
skipsdist = True
ignore_basepython_conflict = True

[testenv]
usedevelop = True
install_command = pip install {opts} {packages}
deps =
  -r{toxinidir}/requirements.txt
commands = stestr run {posargs}
  stestr slowest

[testenv:pep8]
commands =
  doc8 doc/source README.rst

[testenv:venv]
deps =
  -r{toxinidir}/requirements.txt
commands = {posargs}

[testenv:docs]
deps = -r{toxinidir}/doc/requirements.txt
allowlist_externals =
  mkdir
  cp
  find
commands =
  {[testenv:api-ref]commands}
  {[testenv:json-api-ref]commands}
  {[testenv:umn]commands}
  {[testenv:json-umn]commands}

[testenv:docs-pdf]
deps = -r{toxinidir}/doc/requirements.txt
allowlist_externals =
  rm
  mkdir
  make
  bash
  cp
commands =
  mkdir -p doc/build/pdf


# HTML version
[testenv:api-ref]
deps = -r{toxinidir}/doc/requirements.txt
allowlist_externals =
  cp
  mkdir
commands =
  sphinx-build -W --keep-going -b html api-ref/source doc/build/html/api-ref
  mkdir -p api-ref/build/html
  cp -av doc/build/html/api-ref api-ref/build/html

# Json version (for search)
[testenv:json-api-ref]
deps = -r{toxinidir}/doc/requirements.txt
allowlist_externals =
  cp
  mkdir
  find
commands =
  sphinx-build -W --keep-going -b json api-ref/source doc/build/json/api-ref
  # Drop data useless for the search
  find doc/build/json -type d -and ( -name '_images' -or -name '_static' -or -name '_sources' ) -exec rm {:} ;
  mkdir -p api-ref/build/json
  cp -av doc/build/json/api-ref api-ref/build/json



# HTML version
[testenv:umn]
deps = -r{toxinidir}/doc/requirements.txt
allowlist_externals =
  cp
  mkdir
commands =
  sphinx-build -W --keep-going -b html umn/source doc/build/html/umn
  mkdir -p umn/build/html
  cp -av doc/build/html/umn umn/build/html

# Json version (for search)
[testenv:json-umn]
deps = -r{toxinidir}/doc/requirements.txt
allowlist_externals =
  cp
  mkdir
  find
commands =
  sphinx-build -W --keep-going -b json umn/source doc/build/json/umn
  # Drop data useless for the search
  find doc/build/json -type d -and ( -name '_images' -or -name '_static' -or -name '_sources' ) -exec rm {:} ;
  mkdir -p umn/build/json
  cp -av doc/build/json/umn umn/build/json


